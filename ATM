#include<stdio.h>
#include<stdlib.h>
#include<stdlib.h>
#include<time.h>

struct Account
{
	char name[100];//姓名
	char tel[12];//电话
	char idCard[19];//身份证
	char username[20];//银行账号卡号
	char password[7];//密码
	float money;//余额

	struct Account * next; //下一个账户结点的地址
};
typedef struct Account Account;

Account * head=NULL;//指向头结点的头指针
Account * tail=NULL;//指向尾结点的尾指针
Account *curAccount=NULL;//记录当前账户
Account * otherAccount=NULL;//记录对方账户

struct Transaction
{
	char username[100];
	time_t timestamp;
	int type;//0-取款，1-存款
	int amount;

	struct Transaction * next;
};
typedef struct Transaction Transaction;

//交易记录信息链表
Transaction * tHead=NULL;
Transaction * tTail=NULL;

//找到返回1，否则返回0

void signIn()
{
	for(int i=0;i<3;i++)
	{
		Account a;
		printf("请输入账号：");
		scanf("%s",a.username);

		printf("请输入密码：");
		scanf("%s",a.password);

		if(findAccount(a))
		{
			printf("登录成功！\n");
			updatePassword();
		}
		else
		{
			printf("登录失败！\n");break;
		}
	}
}

void updatePassword()
{
	printf("请输入旧密码：\n");
	char oldPassword[100];
	scanf("%s",oldPassword);
	if(strcmp(oldPassword,curAccount->password)==0)
	{
		printf("请输入新密码：");
		scanf("%s",curAccount->password);
		printf("修改成功！\n");
	}
	else
	{
		printf("密码错误！不能修改！\n");
	}
	curAccount->next=NULL;
}



//加载成功返回1，否则返回0
int loadData()
{
	FILE* fp=fopen("D:/atm.txt","r");
	if(fp==NULL)
	{
		return 0;
	}
	else
	{
		while(!feof(fp))
		{
			//创建结点
			Account * newNode=(Account *)malloc(sizeof(Account));

			//结点初始化
			newNode->next=NULL;
			fscanf(fp,"%s %s\n",newNode->username,newNode->password);

			//添加结点到链表
			if(head==NULL)
			{
				head=newNode;
				tail=newNode;
			}
			else
			{
				tail->next=newNode;
				tail=newNode;
			}
		}
		return 1;
	}
}

int findAccount(Account a)
{
	Account * curP=head;
	while(curP!=NULL)
	{
		if((strcmp(curP->username,a.username)==0)&&(strcmp(curP->password,a.password)==0))
		{
			curAccount=curP;
			return 1;
		}
	}
	return 0;
}

//根据卡号查找对方账户，找到返回1，找不到返回0
int findOtherAccount(char otherUsername[])
{
	Account * curp=head;
	while(curp!=NULL)
	{
		if(strcmp(curp->username,otherUsername)==0)
		{
			otherAccount = curp;
			return 1;
		}
		curp=curp->next;
	}
	return 0;
}

void saveData()
{
	FILE* fp=fopen("D:/atm.txt","w");
	if(fp!=NULL)
	{
		Account * curP=head;
		while(curP!=NULL)
		{
			fprintf(fp,"%s\t%s\n",curP->username,curP->password);
			curP=curP->next;
		}
		fclose(fp);
	}
}

void showMenuEnglish()
{
    while(1)
	{
		system("cls");
		printf("\t\t\t   ---欢迎使用ATM机!---\n");
		printf("\t\t\t   #   press 1，开户\n");
		printf("\t\t\t   #   press 2，登录\n");
		printf("\t\t\t   #   press 3，存款\n");
		printf("\t\t\t   #   press 4, 取款\n");
		printf("\t\t\t   #   press 5, 转账\n");
		printf("\t\t\t   #   press 6, 退出\n");
		int n;
		scanf("%d",&n);
		if(n==1)
		{
			signUpEnglish();
		}
		else if(n==2)
		{
			signInEnglish();
		}

		else if(n==3)
        {
            drawMoney();
        }
        else if(n==4)
        {
            saveMoney();
        }
        else if(n==5)
        {
            transfer();
        }
        else if(n==6)
		{
		    exit(0);
		}

	}
}

void signUpEnglish()
{
	//申请一块堆内存空间，将其地址赋值给指针newNodeP（不理解局部变量和全局变量的同学们观看群里的视频C语言内存分配）
	Account * newNodeP=(Account *)malloc(sizeof(Account));
	printf("请输入姓名：\n");
	scanf("%s",newNodeP->name);

	printf("请输入电话：\n");
	scanf("%s",newNodeP->tel);

	printf("请输入身份证：\n");
	scanf("%s",newNodeP->idCard);

	printf("请输入账号：\n");
	scanf("%s",newNodeP->username); //账号应该是有银行给的，应该是系统生成的，思考怎么做？

	printf("请输入密码：\n");
	scanf("%s",newNodeP->password);

	newNodeP->money=0.0f;
	newNodeP->next=NULL;

	//添加结点到链表中
	if(head==NULL)
	{
		head=newNodeP;
		tail=newNodeP;
	}
	else
	{
		tail->next=newNodeP;
		tail=newNodeP;
	}

	printf("添加成功\n");
	system("pause");
}

void signInEnglish()
{
    for(int i=0;i<3;i++)
	{
		Account a;
		printf("请输入账号：");
		scanf("%s",a.username);

		printf("请输入密码：");
		scanf("%s",a.password);

		if(findAccount(a))
		{
			printf("登录成功！\n");
			updatePassword();
			break;
		}
		else
		{
			printf("登录失败！\n");
		}
	}
}

void signOut()
{
	exit(0);
}

void drawMoney()
{

	printf("请输入取款金额：");
	int money;
	scanf("%d",&money);

	//验证金额
	if(curAccount->money>=money)
	{
		printf("取款成功！\n");
		curAccount->money-=money;

		//产生交易记录...

		//创建结点
		Transaction * newNode=(Transaction*)malloc(sizeof(Transaction));

		//结点初始化
		newNode->next=NULL;
		strcpy(newNode->username,curAccount->username);
		newNode->timestamp=time(NULL);
		newNode->type=0;
		newNode->amount=money;

		//添加结点到链表
		if(tHead==NULL)
		{
			tHead=newNode;
			tTail=newNode;
		}
		else
		{
			tTail->next=newNode;
			tTail=newNode;
		}
	}
	else
	{
		printf("余额不足！\n");
	}
}

void saveMoney()
{
	printf("请输入存款金额：");
	int money;
	scanf("%d",&money);
	printf("存款成功！\n");
	curAccount->money+=money;

	//产生交易记录...
}

void transfer()
{
	printf("请输入对方账户：");
	char otherUsername[100];
	scanf("%s",otherUsername);

	//判断账户合法性
	if(findOtherAccount(otherUsername))
	{
		printf("请输入转账金额：");
		int money;
		scanf("%d",&money);

		//判断金额的合法性
		if(curAccount->money>=money)
		{
			//转账（当前账户余额减少，对方账户余额增多）
			curAccount->money -= money;
			otherAccount->money += money;
			printf("转账成功!\n");

			//交易记录...Write your code here...

		}
		else
		{
			printf("余额不足！\n");
		}
	}
	else
	{
		printf("账户不存在\n");
	}
}

void showMenuChinese1()
{
    while(1)
    {
        system("cls");
        printf("\t\t\t                       \n");
        printf("\t\t\t   ---欢迎使用ATM机!---\n");
		printf("\t\t\t   #   输入 1，开户    \n");
		printf("\t\t\t   #   输入 2，登录    \n");
		int s;
		scanf("%d",&s);
		if(s==1)
		{
			signUpChinese();
		}
		else if(s==2)
		{
			signInChinese();
			showMenuChinese2();
		}
    }

}

//用户界面
void showMenuChinese2()
{
    while(2)
	{
		system("cls");
		printf("\t\t\t   ---欢迎使用ATM机!---\n");
		printf("\t\t\t   #   输入 1，存款\n");
		printf("\t\t\t   #   输入 2, 取款\n");
		printf("\t\t\t   #   输入 3, 转账\n");
		printf("\t\t\t   #   输入 4, 退出\n");
		int n;
		scanf("%d",&n);
		if(n==1)
        {
            drawMoney();
        }
        else if(n==2)
        {
            saveMoney();
        }
        else if(n==3)
        {
            transfer();
        }
        else if(n==4)
		{
		    exit(0);
		}

	}
}

void signUpChinese()
{
	//申请一块堆内存空间，将其地址赋值给指针newNodeP（不理解局部变量和全局变量的同学们观看群里的视频C语言内存分配）
	Account * newNodeP=(Account *)malloc(sizeof(Account));
	printf("请输入姓名：\n");
	scanf("%s",newNodeP->name);

	printf("请输入电话：\n");
	scanf("%s",newNodeP->tel);

	printf("请输入身份证：\n");
	scanf("%s",newNodeP->idCard);

	printf("请输入账号：\n");
	scanf("%s",newNodeP->username); //账号应该是有银行给的，应该是系统生成的，思考怎么做？

	printf("请输入密码：\n");
	scanf("%s",newNodeP->password);

	newNodeP->money=0.0f;
	newNodeP->next=NULL;

	//添加结点到链表中
	if(head==NULL)
	{
		head=newNodeP;
		tail=newNodeP;
	}
	else
	{
		tail->next=newNodeP;
		tail=newNodeP;
	}

	printf("添加成功\n");
	system("pause");
}

void signInChinese()
{
    for(int i=0;i<3;i++)
	{
		Account a;
		printf("请输入账号：");
		scanf("%s",a.username);

		printf("请输入密码：");
		scanf("%s",a.password);

		if(findAccount(a))
		{
			printf("登录成功！\n");
			updatePassword();
			break;
		}
		else
		{
			printf("登录失败！\n");
		}
	}
}

void signout()
{
	exit(0);
}

void drawmoney()
{

	printf("请输入取款金额：");
	int money;
	scanf("%d",&money);

	//验证金额
	if(curAccount->money>=money)
	{
		printf("取款成功！\n");
		curAccount->money-=money;

		//产生交易记录...

		//创建结点
		Transaction * newNode=(Transaction*)malloc(sizeof(Transaction));

		//结点初始化
		newNode->next=NULL;
		strcpy(newNode->username,curAccount->username);
		newNode->timestamp=time(NULL);
		newNode->type=0;
		newNode->amount=money;

		//添加结点到链表
		if(tHead==NULL)
		{
			tHead=newNode;
			tTail=newNode;
		}
		else
		{
			tTail->next=newNode;
			tTail=newNode;
		}
	}
	else
	{
		printf("余额不足！\n");
	}
}

void savemoney()
{
	printf("请输入存款金额：");
	int money;
	scanf("%d",&money);
	printf("存款成功！\n");
	curAccount->money+=money;

	//产生交易记录...
}

void transform()
{
	printf("请输入对方账户：");
	char otherUsername[100];
	scanf("%s",otherUsername);

	//判断账户合法性
	if(findOtherAccount(otherUsername))
	{
		printf("请输入转账金额：");
		int money;
		scanf("%d",&money);

		//判断金额的合法性
		if(curAccount->money>=money)
		{
			//转账（当前账户余额减少，对方账户余额增多）
			curAccount->money -= money;
			otherAccount->money += money;
			printf("转账成功!\n");

			//交易记录...Write your code here...

		}
		else
		{
			printf("余额不足！\n");
		}
	}
	else
	{
		printf("账户不存在\n");
	}
}


int main()
{
    printf("\t\t               $ 父爱银行 $                \n");
    printf("\t\t                                           \n");
    printf("\t\t        (The bank with father's love)      \n");
    printf("\t\t                                           \n");
	printf("\t\t   Please press 1 , Choose English Service!\n");
	printf("\t\t                                           \n");
	printf("\t\t            选择中文服务请按2！            \n");
	int language;
	scanf("%d",&language);
	if(language==2)
	{
		showMenuChinese1(); //显示中文菜单
	}
	else if(language==1)
	{
		showMenuEnglish(); //显示英文菜单
	}

	signIn();
	loadData();
	int status=loadData();//加载账户信息
	//loadTransaction();//加载交易记录信息

	if(status==1)
	{
		printf("加载成功！\n");
	}
	else
	{
		printf("加载失败！\n");
	}
	saveData();
	return 0;
}

